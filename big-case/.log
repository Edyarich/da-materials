2023-03-27 16:13:38,710 [33879] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-27 16:13:38,710 [33879] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-27 16:13:38,710 [33879] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-27 16:13:38,713 [33879] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-27 16:13:38,713 [33879] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-27 16:13:38,713 [33879] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-27 16:13:39,370 [33879] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-27 16:13:39,370 [33879] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-27 16:13:39,371 [33879] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-27 16:13:39,374 [33879] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-27 16:13:39,375 [33879] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-27 16:13:39,375 [33879] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-27 16:14:42,176 [33879] DEBUG    matplotlib:224: [JupyterRequire] matplotlib data path: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data
2023-03-27 16:14:42,187 [33879] DEBUG    matplotlib:224: [JupyterRequire] CONFIGDIR=/home/eduard/.config/matplotlib
2023-03-27 16:14:42,189 [33879] DEBUG    matplotlib:1394: [JupyterRequire] matplotlib version 3.4.3
2023-03-27 16:14:42,190 [33879] DEBUG    matplotlib:1395: [JupyterRequire] interactive is False
2023-03-27 16:14:42,190 [33879] DEBUG    matplotlib:1396: [JupyterRequire] platform is linux
2023-03-27 16:14:42,190 [33879] DEBUG    matplotlib:1397: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', 'fnmatch', 'glob', '_socket', 'array', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'termios', 'getpass', 'platform', '_ctypes', '_struct', 'struct', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'zipfile', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'configparser', 'optparse', 'pycodestyle', 'autopep8', 'logging.config', 'syslog', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver', 'dateutil.rrule', 'matplotlib.units', 'matplotlib.dates']
2023-03-27 16:14:42,241 [33879] DEBUG    matplotlib:224: [JupyterRequire] CACHEDIR=/home/eduard/.cache/matplotlib
2023-03-27 16:14:42,244 [33879] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from /home/eduard/.cache/matplotlib/fontlist-v330.json
2023-03-27 16:14:42,456 [33879] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-03-27 16:14:42,461 [33879] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-03-27 16:23:37,637 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-03-27 16:23:37,641 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/__init__.py
2023-03-27 16:23:37,749 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/frame.py
2023-03-27 16:23:37,789 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/__init__.py
2023-03-27 16:23:37,891 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/generic.py
2023-03-27 16:23:38,353 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/base.py
2023-03-27 16:23:38,364 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/accessor.py
2023-03-27 16:23:38,424 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/indexing.py
2023-03-27 16:23:38,447 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/arraylike.py
2023-03-27 16:23:38,653 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/collections/__init__.py
2023-03-27 16:23:38,679 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/collections/__init__.pyi
2023-03-27 16:23:38,686 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/collections/abc.py
2023-03-27 16:23:38,687 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/collections/abc.pyi
2023-03-27 16:23:38,725 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/typing.py
2023-03-27 16:23:38,743 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-03-27 16:23:38,769 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-03-27 16:23:38,798 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/_typing.py
2023-03-27 16:23:41,040 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/types.py
2023-03-27 16:23:41,049 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2023-03-27 16:23:41,098 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/__init__.py
2023-03-27 16:23:41,241 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/__init__.pyi
2023-03-27 16:23:41,332 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/abc.py
2023-03-27 16:23:41,335 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
2023-03-27 16:23:41,375 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/_libs/__init__.py
2023-03-27 16:23:41,449 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/series.py
2023-03-27 16:33:37,660 [33879] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-27 16:33:37,661 [33879] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 7; new: 1
2023-03-27 16:33:37,661 [33879] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:7] new[1:1]
2023-03-27 16:33:37,662 [33879] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-27 16:33:37,662 [33879] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-27 16:34:44,632 [33879] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-27 16:34:44,632 [33879] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2023-03-27 16:34:44,633 [33879] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2023-03-27 16:34:44,634 [33879] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2023-03-27 16:34:44,634 [33879] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-27 16:47:41,103 [33879] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-27 16:47:41,104 [33879] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 3
2023-03-27 16:47:41,104 [33879] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:4] new[1:3]
2023-03-27 16:47:41,105 [33879] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 3 (to 2 in part parser)
2023-03-27 16:47:41,105 [33879] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-27 16:51:44,499 [33879] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-27 16:51:44,500 [33879] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 3; new: 2
2023-03-27 16:51:44,500 [33879] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:3] new[1:2]
2023-03-27 16:51:44,501 [33879] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2023-03-27 16:51:44,502 [33879] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-27 16:55:44,116 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Serif:style=normal:variant=normal:weight=normal:stretch=normal:size=24.0.
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 1.05
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 1.335
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:55:44,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:55:44,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:55:44,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:55:44,145 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Serif:style=normal:variant=normal:weight=normal:stretch=normal:size=24.0 to DejaVu Serif ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf') with score of 0.050000.
2023-03-27 16:56:08,488 [33879] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-27 16:56:08,488 [33879] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 2; new: 1
2023-03-27 16:56:08,488 [33879] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:2] new[1:1]
2023-03-27 16:56:08,489 [33879] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-27 16:56:08,489 [33879] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-27 16:57:41,857 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:41,857 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:41,869 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:41,869 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:41,870 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:41,870 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:41,983 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,984 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,985 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,986 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:41,987 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,988 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,989 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,990 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,991 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,992 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:41,993 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,994 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,995 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,996 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,997 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,998 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:41,999 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,000 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,001 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,002 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,003 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,004 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,005 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,006 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,007 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2023-03-27 16:57:42,008 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2023-03-27 16:57:42,009 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,010 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,011 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,012 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,013 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,014 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,015 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,016 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,017 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,018 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,019 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,020 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,021 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,022 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,023 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,024 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,025 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,026 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,027 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,028 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,029 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,030 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,031 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,032 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2023-03-27 16:57:42,033 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,034 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,035 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,036 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,037 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,038 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,039 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,040 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,041 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,042 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,043 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,044 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,045 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,046 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,047 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,048 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,049 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,050 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,051 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,052 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,053 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-03-27 16:57:42,054 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,055 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,056 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,057 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,057 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,057 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,057 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,057 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,057 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,057 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,058 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,059 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2023-03-27 16:57:42,060 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,061 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,062 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,063 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,064 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,065 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,066 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,067 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,068 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,069 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,070 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,071 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,072 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,073 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,074 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,075 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,076 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,077 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,078 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,079 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,080 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,081 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,082 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,083 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,083 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,083 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,083 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,083 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,083 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,083 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2023-03-27 16:57:42,084 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,084 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,084 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,084 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,084 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,084 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,085 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,086 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,087 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,088 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,089 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,090 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,091 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,092 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,093 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,094 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,095 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,096 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,097 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,098 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,099 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,100 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,101 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,102 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,103 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,104 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,105 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,106 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-03-27 16:57:42,107 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,108 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,109 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,110 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,110 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,110 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,110 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,111 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,112 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,113 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,114 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,115 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,116 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,117 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-03-27 16:57:42,118 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,119 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,120 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,121 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,122 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,123 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,124 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,125 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-03-27 16:57:42,126 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,127 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,128 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,129 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,130 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,131 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,132 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,133 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,134 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2023-03-27 16:57:42,135 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,135 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,136 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,137 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,138 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,139 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,140 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,141 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,142 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,143 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,144 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,145 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,146 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,147 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,148 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,149 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,150 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,151 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,152 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,153 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,154 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,155 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,156 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,157 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,158 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,159 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,159 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,159 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeOneSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2023-03-27 16:57:42,159 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,160 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,161 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,162 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,163 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,164 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,165 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,166 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,167 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,168 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,169 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,170 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,171 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,172 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,173 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,174 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,175 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,176 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,177 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,178 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,179 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,180 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,181 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,182 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,183 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,183 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,183 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,183 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,183 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeTwoSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2023-03-27 16:57:42,183 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,184 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,185 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,186 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,187 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,188 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,189 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,190 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,191 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,192 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,193 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,194 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,195 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,196 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,197 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,198 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,199 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,200 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,201 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,202 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,203 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,204 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,205 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,206 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,207 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeThreeSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,208 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,209 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,210 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,211 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,212 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,213 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,214 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,215 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,216 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,217 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,218 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,219 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,220 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,221 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,222 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,223 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,224 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,225 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,226 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,227 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,228 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,229 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,230 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,231 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,232 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,233 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeFourSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2023-03-27 16:57:42,234 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,234 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,234 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,234 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,234 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,234 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,234 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,235 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,236 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,237 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,238 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,239 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,240 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,241 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,242 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,243 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,244 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,245 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,246 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,247 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,248 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,249 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,250 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,251 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,252 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,253 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,254 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,255 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,256 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,257 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeFiveSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2023-03-27 16:57:42,258 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,259 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,260 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,261 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,262 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,263 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,264 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,265 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,266 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,267 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,268 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,269 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,270 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,271 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,272 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,273 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,274 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,275 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,276 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,277 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,278 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,279 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,280 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,281 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,282 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,282 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,282 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,282 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,282 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,282 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,282 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmsy10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,283 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,284 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,285 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,286 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,287 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,288 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,289 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,290 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,291 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,292 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,293 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,294 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,295 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,296 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,297 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,298 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,299 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,300 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,301 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,302 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,303 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,304 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,305 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,306 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,307 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,308 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,309 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,309 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,309 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,309 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,309 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,309 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,309 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmr10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2023-03-27 16:57:42,310 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,310 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,310 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,310 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,310 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,310 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,310 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,311 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,312 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,313 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,314 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,315 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,316 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,317 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,318 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,319 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,320 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,321 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,322 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,323 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,324 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,325 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,326 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,327 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,328 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,329 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,330 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,331 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,332 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,333 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmtt10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2023-03-27 16:57:42,334 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,334 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,334 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,335 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,336 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,337 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,338 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,339 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,340 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,341 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,342 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,343 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,344 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,345 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,346 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,347 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,348 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,349 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,350 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,351 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,352 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,353 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,354 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,355 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,356 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,357 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,358 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,358 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,358 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,358 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,358 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,358 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,358 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmmi10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,359 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,360 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,361 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,362 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,363 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,364 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,365 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,366 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,367 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,368 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,369 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,370 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,371 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,372 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,373 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,374 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,375 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,376 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,377 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,378 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,379 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,380 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,381 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,382 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,383 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,384 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,385 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,385 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,385 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,385 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmb10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,386 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,387 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,388 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,389 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,390 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,391 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,392 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,393 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,394 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,395 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,396 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,397 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,398 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,399 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,400 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,401 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,402 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,403 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,404 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,405 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,406 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,407 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,408 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,409 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,410 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,411 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmss10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2023-03-27 16:57:42,412 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,412 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,412 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,412 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,412 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,412 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,413 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,414 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,415 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,416 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,417 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,418 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,419 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,420 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,421 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,422 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,423 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,424 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,425 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,426 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,427 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,428 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,429 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,430 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,431 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,432 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,433 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,434 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,435 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,436 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,437 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,438 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,438 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,438 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,438 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmex10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,439 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,440 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,441 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,442 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,443 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,444 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,445 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,446 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,447 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,448 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,449 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,450 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,451 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,452 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,453 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,454 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,455 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,456 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,457 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,458 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,459 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,460 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,461 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,462 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,463 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,463 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,463 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,463 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,464 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,465 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-03-27 16:57:42,466 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,467 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,468 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,469 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,470 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,471 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,472 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,473 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,474 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,475 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,476 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,477 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,478 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-03-27 16:57:42,479 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,480 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,481 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,482 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,483 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-03-27 16:57:42,484 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,485 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,486 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,487 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,488 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-27 16:57:42,489 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-27 16:57:42,490 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,491 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,492 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,493 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-03-27 16:57:42,494 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,495 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,496 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,497 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,498 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,499 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,500 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,501 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,502 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,503 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,504 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,505 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,506 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,507 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,508 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-03-27 16:57:42,509 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,510 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,511 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,512 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-27 16:57:42,513 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-27 16:57:42,514 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,515 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,516 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,517 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,518 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,519 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,520 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,521 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,522 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,523 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,524 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,525 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,526 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,527 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,528 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,529 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,530 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,531 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,532 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,533 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,534 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,535 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,536 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,537 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,538 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,539 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,539 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,539 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans Mono ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2023-03-27 16:57:42,539 [33879] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,540 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,541 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,542 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,543 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,544 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,545 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,546 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,547 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,548 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,549 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,550 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,551 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,552 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,553 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,554 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,555 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,556 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,557 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,558 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,559 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,560 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,561 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,562 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-27 16:57:42,563 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,564 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-27 16:57:42,565 [33879] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans Display ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2023-03-27 16:57:42,714 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,714 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,715 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,716 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,716 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,716 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:42,773 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,773 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,775 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,775 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,776 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,776 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:42,787 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,787 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,789 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,789 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,790 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,791 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:42,871 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,872 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,873 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,873 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,874 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,874 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:42,884 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,884 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,885 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,885 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,886 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,886 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:42,918 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,918 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,920 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,920 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,920 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,920 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:42,930 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,931 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,932 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,932 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:42,932 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:42,933 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:43,017 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:43,017 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:43,019 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:43,019 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:43,019 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:43,020 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:57:43,081 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:43,081 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:43,082 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:43,082 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:57:43,083 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:57:43,083 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,396 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,396 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,409 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,410 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,411 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,411 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,608 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,609 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,610 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,610 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,611 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,611 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,669 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,670 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,671 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,671 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,672 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,672 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,684 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,684 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,685 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,685 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,686 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,686 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,775 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,775 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,776 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,776 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,777 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,777 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,788 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,789 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,790 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,790 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,791 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,791 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,825 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,826 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,827 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,827 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,828 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,828 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,839 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,839 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,840 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,840 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,841 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,841 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,930 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,931 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,932 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,932 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,932 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,932 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:02,997 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,997 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,998 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,998 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:02,999 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:02,999 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,464 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,465 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,476 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,477 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,477 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,477 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,637 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,637 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,638 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,638 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,639 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,639 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,690 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,690 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,692 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,692 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,692 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,692 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,702 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,703 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,704 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,704 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,704 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,704 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,782 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,782 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,783 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,784 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,784 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,784 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,794 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,794 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,796 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,796 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,796 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,796 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,828 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,829 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,830 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,830 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,831 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,831 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,841 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,841 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,842 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,842 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,843 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,843 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,925 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,925 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,926 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,926 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,927 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,927 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:26,990 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,991 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,992 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,992 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:26,993 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:26,993 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,121 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,121 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,133 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,133 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,134 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,134 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,297 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,297 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,298 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,298 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,299 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,299 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,351 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,352 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,353 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,353 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,354 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,354 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,364 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,364 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,366 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,366 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,366 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,366 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,445 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,445 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,447 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,447 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,448 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,448 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,458 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,458 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,459 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,459 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,460 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,460 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,493 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,493 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,495 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,495 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,495 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,495 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,506 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,506 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,507 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,507 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,508 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,508 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,591 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,591 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,592 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,592 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,593 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,593 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:37,660 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,660 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,661 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,661 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:37,662 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:37,662 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:41,938 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:41,938 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:41,949 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:41,950 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:41,950 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:41,950 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,114 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,115 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,116 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,116 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,116 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,117 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,168 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,169 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,170 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,170 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,171 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,171 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,181 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,181 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,182 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,182 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,183 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,183 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,260 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,261 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,262 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,262 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,263 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,263 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,273 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,273 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,274 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,274 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,275 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,275 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,308 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,309 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,310 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,310 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,310 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,311 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,321 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,321 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,322 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,322 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,323 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,323 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,406 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,406 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,407 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,408 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,408 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,408 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:42,473 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,473 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,475 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,475 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:42,476 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:42,476 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,568 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,569 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,581 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,582 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,582 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,583 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,748 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,748 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,749 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,749 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,750 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,750 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,803 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,804 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,805 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,805 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,806 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,806 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,816 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,816 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,818 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,818 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,818 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,818 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,896 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,897 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,898 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,898 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,899 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,899 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,909 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,909 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,910 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,911 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,911 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,911 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,945 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,945 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,946 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,946 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,947 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,947 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:54,958 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,959 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,960 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,960 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:54,960 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:54,961 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:55,047 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:55,047 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:55,049 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:55,049 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:55,049 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:55,049 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:58:55,116 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:55,116 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:55,117 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:55,117 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:58:55,118 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:58:55,118 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:10,762 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,763 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:10,774 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,774 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:10,775 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,775 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:10,941 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,941 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:10,942 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,942 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:10,943 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,943 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:10,996 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,996 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:10,997 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,997 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:10,998 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:10,998 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:11,008 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,008 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,009 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,009 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,010 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,010 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:11,087 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,088 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,089 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,089 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,090 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,090 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:11,100 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,101 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,102 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,102 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,102 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,103 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:11,135 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,135 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,137 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,137 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,137 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,138 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:11,148 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,148 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,149 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,149 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,150 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,150 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:11,234 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,234 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,235 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,236 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,236 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,236 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:11,299 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,299 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,300 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,300 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:11,301 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:11,301 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:21,176 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:21,176 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:21,188 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:21,188 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:21,189 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:21,189 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,260 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,260 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,261 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,261 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,262 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,262 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,318 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,318 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,320 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,320 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,320 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,321 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,331 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,332 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,333 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,333 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,333 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,334 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,413 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,414 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,415 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,415 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,415 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,416 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,426 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,426 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,427 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,427 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,428 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,428 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,461 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,462 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,463 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,463 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,464 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,464 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,474 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,475 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,476 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,476 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,477 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,477 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,559 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,559 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,561 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,561 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,561 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,561 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:22,623 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,623 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,624 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,624 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:22,625 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:22,625 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,319 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,320 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,331 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,331 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,332 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,332 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,502 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,502 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,503 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,503 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,504 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,504 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,556 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,556 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,557 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,557 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,558 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,558 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,568 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,569 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,570 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,570 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,570 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,571 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,648 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,649 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,650 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,650 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,650 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,651 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,661 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,661 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,662 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,662 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,663 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,663 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,696 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,696 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,697 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,698 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,698 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,698 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,708 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,708 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,710 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,710 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,710 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,710 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,795 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,796 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,798 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,798 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,799 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,799 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:26,864 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,864 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,865 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,866 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:26,866 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:26,867 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:36,820 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:36,820 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:36,831 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:36,832 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:36,832 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:36,833 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:36,995 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:36,995 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:36,997 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:36,997 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:36,997 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:36,997 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,049 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,049 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,051 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,051 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,051 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,051 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,062 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,062 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,063 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,063 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,064 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,064 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,141 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,141 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,143 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,143 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,143 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,144 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,154 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,154 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,155 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,155 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,156 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,156 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,189 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,189 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,190 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,190 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,191 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,191 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,201 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,201 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,203 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,203 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,203 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,203 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,285 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,286 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,287 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,287 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,288 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,288 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:37,350 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,351 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,352 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,352 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:37,353 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:37,353 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,574 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,575 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,586 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,587 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,587 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,587 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,752 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,753 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,754 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,754 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,755 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,755 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,809 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,809 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,810 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,810 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,811 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,811 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,821 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,822 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,823 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,823 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,823 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,824 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,904 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,904 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,905 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,905 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,906 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,906 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,916 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,916 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,918 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,918 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,918 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,918 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,953 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,953 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,954 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,955 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,955 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,955 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:43,965 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,966 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,967 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,967 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:43,968 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:43,968 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:44,052 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:44,052 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:44,054 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:44,054 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:44,054 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:44,054 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:44,119 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:44,120 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:44,121 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:44,121 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:44,121 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:44,122 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:48,908 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:48,908 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:48,921 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:48,921 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:48,922 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:48,922 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,088 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,089 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,090 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,090 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,090 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,090 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,144 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,144 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,146 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,146 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,146 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,147 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,156 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,157 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,158 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,158 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,158 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,159 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,239 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,240 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,241 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,241 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,241 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,241 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,252 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,252 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,253 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,253 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,254 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,254 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,287 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,287 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,288 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,288 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,289 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,289 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,300 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,300 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,301 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,302 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,302 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,302 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,389 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,390 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,391 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,392 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,392 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,393 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:49,457 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,457 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,458 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,458 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:49,459 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:49,459 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,615 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,615 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,627 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,627 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,628 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,628 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,789 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,789 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,790 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,790 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,791 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,791 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,843 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,843 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,844 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,845 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,845 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,845 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,855 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,856 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,857 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,857 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,857 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,857 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,935 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,935 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,936 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,936 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,937 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,937 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,947 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,947 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,948 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,948 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,949 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,949 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,982 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,982 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,984 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,984 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,985 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,985 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 16:59:59,995 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,995 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,997 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,997 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 16:59:59,997 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 16:59:59,997 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 17:00:00,079 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 17:00:00,079 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 17:00:00,080 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 17:00:00,081 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 17:00:00,081 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 17:00:00,081 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 17:00:00,143 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 17:00:00,143 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 17:00:00,144 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 17:00:00,144 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-03-27 17:00:00,145 [33879] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-03-27 17:00:00,145 [33879] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-03-27 17:08:17,322 [33879] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-27 17:08:17,322 [33879] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-03-27 17:08:17,323 [33879] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-03-27 17:08:17,323 [33879] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-27 17:08:17,323 [33879] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-27 17:08:17,356 [33879] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/pyplot.py
2023-03-27 17:08:28,814 [33879] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-27 17:08:28,815 [33879] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-03-27 17:08:28,815 [33879] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-03-27 17:08:28,816 [33879] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-27 17:08:28,816 [33879] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-04-17 10:32:25,980 [55622] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-17 10:32:25,981 [55622] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-17 10:32:25,981 [55622] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-17 10:32:25,984 [55622] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-17 10:32:25,985 [55622] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-17 10:32:25,986 [55622] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-17 10:32:26,499 [55622] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-17 10:32:26,499 [55622] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-17 10:32:26,499 [55622] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-17 10:32:26,503 [55622] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-17 10:32:26,503 [55622] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-17 10:32:26,504 [55622] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-17 10:32:37,121 [55622] DEBUG    matplotlib:224: [JupyterRequire] matplotlib data path: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data
2023-04-17 10:32:37,131 [55622] DEBUG    matplotlib:224: [JupyterRequire] CONFIGDIR=/home/eduard/.config/matplotlib
2023-04-17 10:32:37,135 [55622] DEBUG    matplotlib:1394: [JupyterRequire] matplotlib version 3.4.3
2023-04-17 10:32:37,135 [55622] DEBUG    matplotlib:1395: [JupyterRequire] interactive is False
2023-04-17 10:32:37,135 [55622] DEBUG    matplotlib:1396: [JupyterRequire] platform is linux
2023-04-17 10:32:37,135 [55622] DEBUG    matplotlib:1397: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', 'fnmatch', 'glob', '_socket', 'array', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'termios', 'getpass', 'platform', '_ctypes', '_struct', 'struct', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'zipfile', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd_plugins.extensions.pydevd_plugin_omegaconf', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'configparser', 'optparse', 'pycodestyle', 'autopep8', 'logging.config', 'syslog', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pytz', 'mmap', 'pandas._typing', 'pandas._libs.tslibs.dtypes', 'pandas._libs.tslibs.base', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.nattype', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.tzconversion', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.timestamps', 'dateutil.easter', 'pandas._libs.properties', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.vectorized', 'pandas._libs.tslibs', 'pandas._libs.ops_dispatch', 'pandas._libs.missing', 'pandas._libs.hashtable', 'pandas._libs.algos', 'pandas._libs.interval', 'pandas._libs', 'pandas.util._decorators', 'pandas.core', 'pandas.core.util', 'pandas._libs.tslib', 'pandas._libs.lib', 'pandas._libs.hashing', 'pandas.core.dtypes', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.dtypes', 'pandas.core.dtypes.common', 'pandas.core.util.hashing', 'pandas.util', 'pandas.util.version', 'pandas.compat.numpy', 'pandas.compat.pyarrow', 'pandas.compat', 'pandas.core.config_init', 'pandas.core.dtypes.missing', 'pandas.util._exceptions', 'pandas.util._validators', 'pandas.core.dtypes.cast', 'pandas.core.array_algos', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.array_algos.take', 'pandas.core.indexers', 'pandas.core.algorithms', 'pandas.compat.numpy.function', 'pandas.compat._optional', 'pandas.core.missing', 'pandas.core.roperator', 'pandas._libs.ops', 'pandas.core.computation', 'pandas.core.computation.check', 'pandas.core.computation.expressions', 'pandas.core.ops.missing', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.array_ops', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.ops', 'pandas.core.sorting', 'pandas.core.arrays.base', 'pandas.core.nanops', 'pandas.core.array_algos.masked_reductions', 'pandas.core.arraylike', 'pandas.core.arrays.masked', 'pandas.core.arrays.boolean', '_csv', 'csv', 'pandas._libs.arrays', 'pandas.core.accessor', 'pandas.core.array_algos.transforms', 'pandas.core.arrays._mixins', 'pandas.core.base', 'pandas.core.strings.accessor', 'pandas.core.strings.base', 'pandas.core.strings', 'pandas.core.strings.object_array', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.categorical', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.core.arrays.datetimelike', 'pandas.core.arrays._ranges', 'pandas.core.arrays.numeric', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.integer', 'pandas.tseries.offsets', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.floating', 'pandas.core.indexes', 'pandas._libs.index', 'pandas._libs.join', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.io.formats.printing', 'pandas.core.arrays.sparse.array', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse', 'pandas.core.dtypes.concat', 'pandas.core.array_algos.putmask', 'pandas.core.indexes.frozen', 'pandas.core.indexes.base', 'pandas.core.arrays.interval', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.string_', 'pandas.core.arrays.string_arrow', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays', 'pandas.core.flags', 'pandas._libs.reduction', 'pandas.core.indexes.extension', 'pandas.core.indexes.category', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.times', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.interval', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexes.api', 'pandas.core.aggregation', 'pandas.core.apply', 'pandas._libs.indexing', 'pandas.core.indexing', 'pandas.core.reshape', 'pandas._libs.internals', 'pandas._libs.writers', 'pandas.core.array_algos.quantile', 'pandas.core.array_algos.replace', 'pandas.core.internals.blocks', 'pandas.core.internals.api', 'pandas.core.internals.base', 'pandas.core.internals.array_manager', 'pandas.core.internals.ops', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.core.internals', 'pandas.core.reshape.concat', 'pandas.io.common', 'pandas.io.formats.format', 'pandas.core.describe', 'pandas.core.internals.construction', 'pandas.core.shared_docs', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.util.numba_', 'pandas.core.window.common', 'pandas.core.window.doc', 'pandas._libs.window.indexers', 'pandas.core.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.online', 'pandas.core.window.rolling', 'pandas.core.window.ewm', 'pandas.core.window.expanding', 'pandas.core.window', 'pandas.core.generic', 'pandas.core.reshape.util', 'pandas.core.reshape.melt', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.arrays', 'pandas.core.tools.datetimes', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.plotting', 'pandas.core.series', 'pandas.io.formats.info', 'pandas.core.frame', 'pandas.core.groupby.base', 'pandas._libs.groupby', 'pandas.core.groupby.numba_', 'pandas.core.groupby.categorical', 'pandas.core.groupby.grouper', 'pandas.core.groupby.ops', 'pandas.core.groupby.groupby', 'pandas.core.groupby.generic', 'pandas.core.groupby', 'pandas.core.api', 'pandas.tseries.api', 'pandas.core.computation.common', 'pandas.core.computation.align', 'pandas.compat.chainmap', 'pandas.core.computation.scope', 'pandas.core.computation.ops', 'pandas.core.computation.parsing', 'pandas.core.computation.expr', 'pandas.core.computation.engines', 'pandas.core.computation.eval', 'pandas.core.computation.api', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.core.reshape.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.core.dtypes.api', 'pandas.api.types', 'pandas.api', 'pandas.util._print_versions', 'pandas.io.clipboards', 'pandas._libs.parsers', 'pandas.io.excel._util', 'pandas.io.date_converters', 'pandas.io.parsers.base_parser', 'pandas.io.parsers.c_parser_wrapper', 'pandas.io.parsers.python_parser', 'pandas.io.parsers.readers', 'pandas.io.parsers', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlrd', 'pandas.io.excel._base', 'pandas._libs.json', 'pandas.io.formats._color_data', 'pandas.io.formats.css', 'pandas.io.formats.excel', 'pandas.io.excel._odswriter', 'pandas.io.excel._xlsxwriter', 'pandas.io.excel._xlwt', 'pandas.io.excel', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.json._json', 'pandas.io.json', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.compat.pickle_compat', 'pandas.io.pickle', 'pandas.core.computation.pytables', 'pandas.io.pytables', 'pandas.io.sas.sasreader', 'pandas.io.sas', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.io.xml', 'pandas.io.api', 'pandas.util._tester', 'pandas._testing._random', 'pandas._testing.contexts', 'pandas._testing._io', 'pandas._testing._warnings', 'cmath', 'pandas._libs.testing', 'pandas._testing.asserters', 'pandas._testing.compat', 'pandas._testing', 'pandas.testing', 'pandas._version', 'pandas', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver', 'dateutil.rrule', 'matplotlib.units', 'matplotlib.dates']
2023-04-17 10:32:37,187 [55622] DEBUG    matplotlib:224: [JupyterRequire] CACHEDIR=/home/eduard/.cache/matplotlib
2023-04-17 10:32:37,191 [55622] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from /home/eduard/.cache/matplotlib/fontlist-v330.json
2023-04-17 10:32:37,360 [55622] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-17 10:32:37,366 [55622] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-04-17 10:46:29,164 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Serif:style=normal:variant=normal:weight=normal:stretch=normal:size=24.0.
2023-04-17 10:46:29,165 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,165 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,165 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,165 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,165 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,166 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 1.05
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 1.335
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,167 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,168 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:46:29,169 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,170 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,171 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,172 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:46:29,173 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,174 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,175 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,176 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,177 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:46:29,178 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,179 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,180 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,181 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,182 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,183 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,184 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,185 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,186 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,187 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:46:29,188 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,189 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:46:29,190 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Serif:style=normal:variant=normal:weight=normal:stretch=normal:size=24.0 to DejaVu Serif ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf') with score of 0.050000.
2023-04-17 10:49:58,858 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-04-17 10:49:58,862 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/__init__.py
2023-04-17 10:49:59,075 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/io/parsers/readers.py
2023-04-17 10:49:59,111 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/collections/__init__.py
2023-04-17 10:49:59,124 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/collections/__init__.pyi
2023-04-17 10:49:59,130 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/collections/abc.py
2023-04-17 10:49:59,132 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/collections/abc.pyi
2023-04-17 10:49:59,169 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/typing.py
2023-04-17 10:49:59,187 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-04-17 10:49:59,214 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-04-17 10:49:59,299 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/_typing.py
2023-04-17 10:49:59,319 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/os.py
2023-04-17 10:49:59,337 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/os/__init__.pyi
2023-04-17 10:49:59,359 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/__init__.py
2023-04-17 10:49:59,461 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/frame.py
2023-04-17 10:49:59,596 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/generic.py
2023-04-17 10:49:59,642 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/base.py
2023-04-17 10:49:59,651 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/accessor.py
2023-04-17 10:49:59,689 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/indexing.py
2023-04-17 10:49:59,849 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/arraylike.py
2023-04-17 10:49:59,875 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/io/__init__.py
2023-04-17 10:49:59,876 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/io/parsers/__init__.py
2023-04-17 10:49:59,897 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/io/parsers/base_parser.py
2023-04-17 10:49:59,912 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/indexes/__init__.py
2023-04-17 10:49:59,918 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/indexes/api.py
2023-04-17 10:49:59,940 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/indexes/range.py
2023-04-17 10:49:59,958 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/indexes/numeric.py
2023-04-17 10:50:00,041 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/indexes/base.py
2023-04-17 10:50:00,102 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/types.py
2023-04-17 10:50:00,110 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2023-04-17 10:50:00,221 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/__init__.py
2023-04-17 10:50:00,332 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/__init__.pyi
2023-04-17 10:50:00,422 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/abc.py
2023-04-17 10:50:00,425 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
2023-04-17 10:50:00,506 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/flags.py
2023-04-17 10:50:00,515 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/_libs/__init__.py
2023-04-17 10:50:00,581 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/series.py
2023-04-17 10:50:00,643 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/array_algos/putmask.py
2023-04-17 10:50:00,693 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/internals/blocks.py
2023-04-17 10:50:00,726 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/common.py
2023-04-17 10:50:01,750 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/arrays/__init__.py
2023-04-17 10:50:01,763 [55622] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/pandas/core/arrays/base.py
2023-04-17 10:54:14,201 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:14,201 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:14,214 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:14,214 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:14,215 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:14,215 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:14,329 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,330 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,330 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,330 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,330 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,330 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,330 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,330 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,331 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,332 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,333 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,334 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,335 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,336 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,337 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,338 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,339 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,340 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,341 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,342 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,343 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,344 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,345 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,346 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,347 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,348 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,349 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,350 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,351 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,352 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,353 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,354 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,355 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,355 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,355 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,355 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,356 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,357 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,358 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,359 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,360 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,361 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,362 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,363 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,364 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-04-17 10:54:14,365 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,366 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,367 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,368 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,369 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,370 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,371 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,372 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,373 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,374 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,375 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,376 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,377 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,378 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,379 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,380 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,381 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,381 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,381 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-04-17 10:54:14,382 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,383 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,384 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,385 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,386 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,387 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,388 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,389 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,390 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-04-17 10:54:14,391 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,392 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,393 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,394 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,395 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,396 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,397 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,398 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,399 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,400 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-04-17 10:54:14,401 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,402 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,403 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,404 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,405 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,406 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2023-04-17 10:54:14,407 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,407 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,407 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,407 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,407 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,408 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,409 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,410 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,411 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,412 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,413 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,414 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,415 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,416 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,417 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,418 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,419 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,420 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,421 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,422 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,423 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,424 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,425 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,426 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,427 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,428 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,429 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,430 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,431 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,432 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,432 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2023-04-17 10:54:14,432 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,433 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,434 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2023-04-17 10:54:14,435 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-04-17 10:54:14,436 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,437 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,438 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,439 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,440 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,441 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,442 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,443 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,444 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,445 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,446 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-04-17 10:54:14,447 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,448 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,449 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,450 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,451 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,452 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,453 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,454 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,455 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,456 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,457 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2023-04-17 10:54:14,458 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,458 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,458 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,458 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,458 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,459 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,460 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-04-17 10:54:14,461 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,462 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,463 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,464 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,465 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,466 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,467 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,468 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,469 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,470 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,471 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,472 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-04-17 10:54:14,473 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,474 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,475 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,476 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,477 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,478 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,479 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,480 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,481 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,482 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,483 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,483 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,483 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,483 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,483 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,483 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,483 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,484 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,485 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,486 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,487 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,488 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,489 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,490 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,491 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,492 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,493 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,494 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,495 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,496 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,497 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,498 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,499 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,500 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,501 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,502 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,503 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,504 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,505 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,506 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,507 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,508 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,509 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeOneSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,510 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,511 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,512 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,513 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,514 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,515 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,516 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,517 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,518 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,519 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,520 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,521 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,522 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,523 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,524 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,525 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,526 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,527 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,528 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,529 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,530 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,531 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,532 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,533 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,534 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,535 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,536 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,536 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,536 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,536 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,536 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeTwoSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,537 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,538 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,539 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,540 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,541 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,542 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,543 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,544 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,545 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,546 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,547 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,548 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,549 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,550 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,551 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,552 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,553 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,554 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,555 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,556 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,557 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,558 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,559 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,560 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,561 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeThreeSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,562 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,563 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,564 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,565 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,566 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,567 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,568 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,569 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,570 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,571 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,572 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,573 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,574 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,575 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,576 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,577 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,578 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,579 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,580 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,581 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,582 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,583 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,584 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,585 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,586 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,587 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,588 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,588 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,588 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,588 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,588 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,588 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeFourSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,589 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,590 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,591 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,592 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,593 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,594 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,595 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,596 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,597 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,598 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,599 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,600 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,601 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,602 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,603 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,604 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,605 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,606 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,607 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,608 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,609 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,610 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,611 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,612 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,613 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,614 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,615 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,616 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to STIXSizeFiveSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2023-04-17 10:54:14,617 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,617 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,617 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,617 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,617 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,617 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,617 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,618 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,619 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,620 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,621 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,622 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,623 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,624 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,625 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,626 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,627 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,628 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,629 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,630 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,631 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,632 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,633 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,634 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,635 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,636 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,637 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,638 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,639 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,640 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,641 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,642 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,643 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,644 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,644 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,644 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,644 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,644 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmsy10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,645 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,646 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,647 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,648 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,649 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,650 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,651 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,652 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,653 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,654 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,655 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,656 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,657 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,658 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,659 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,660 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,661 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,662 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,663 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,664 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,665 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,666 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,667 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,668 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,669 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,670 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,671 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmr10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2023-04-17 10:54:14,672 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,672 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,672 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,672 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,673 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,674 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,675 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,676 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,677 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,678 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,679 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,680 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,681 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,682 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,683 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,684 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,685 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,686 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,687 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,688 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,689 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,690 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,691 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,692 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,693 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,694 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,695 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,696 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,697 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,697 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmtt10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2023-04-17 10:54:14,697 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,697 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,698 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,699 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,700 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,701 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,702 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,703 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,704 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,705 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,706 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,707 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,708 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,709 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,710 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,711 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,712 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,713 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,714 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,715 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,716 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,717 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,718 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,719 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,720 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,721 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,722 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,722 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,722 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,722 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,722 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmmi10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,723 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,724 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,725 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,726 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,727 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,728 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,729 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,730 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,731 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,732 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,733 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,734 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,735 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,736 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,737 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,738 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,739 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,740 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,741 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,742 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,743 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,744 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,745 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,746 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,747 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmb10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,748 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,749 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,750 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,751 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,752 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,753 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,754 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,755 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,756 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,757 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,758 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,759 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,760 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,761 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,762 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,763 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,764 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,765 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,766 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,767 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,768 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,769 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,770 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,771 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,772 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,773 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,774 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmss10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2023-04-17 10:54:14,775 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,775 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,775 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,775 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,776 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,777 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,778 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,779 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,779 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,779 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,779 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,779 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,779 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,779 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,780 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,780 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,780 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,780 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,780 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,780 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,780 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,781 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,781 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,781 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,781 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,781 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,781 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,782 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,783 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,784 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,785 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,786 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,787 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,788 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,789 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,790 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,791 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,792 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,793 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,794 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,795 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,796 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,797 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,798 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,799 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,800 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,801 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,802 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,803 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,804 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to cmex10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2023-04-17 10:54:14,804 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-04-17 10:54:14,805 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,806 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,807 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,808 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,809 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,810 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,811 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,812 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,813 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,814 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,815 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,816 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,817 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,818 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,819 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,820 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,821 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,822 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,823 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,824 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,825 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,826 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,827 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,828 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,829 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,830 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,831 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-04-17 10:54:14,832 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,832 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,832 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,832 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,833 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,834 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,835 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,836 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,837 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,838 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,839 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,840 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,841 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,842 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,843 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,844 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,845 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,846 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,847 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,848 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,849 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,850 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,851 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,852 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,853 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,854 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,855 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,856 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-04-17 10:54:14,857 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-04-17 10:54:14,858 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-04-17 10:54:14,859 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2023-04-17 10:54:14,860 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,860 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,860 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,861 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,862 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,863 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-04-17 10:54:14,864 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,865 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,866 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,867 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-04-17 10:54:14,868 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,869 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,870 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,871 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,872 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,873 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,874 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,875 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,876 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,877 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,878 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,879 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,880 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,881 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,882 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,883 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,884 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,885 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-04-17 10:54:14,886 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-04-17 10:54:14,887 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=14.399999999999999 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2023-04-17 10:54:14,888 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,888 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,888 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,888 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,888 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,888 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,889 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,890 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,891 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,892 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,893 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,894 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,895 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,896 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,897 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,898 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,899 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,900 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,901 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,902 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,903 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,904 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,905 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,906 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,907 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,908 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,909 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,910 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,911 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,912 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,913 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,914 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,915 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,915 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,915 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,915 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,915 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans Mono ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,916 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,917 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,918 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 10:54:14,919 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,920 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,921 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,922 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,923 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,924 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,925 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,926 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,927 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,928 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,929 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,930 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,931 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,932 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,933 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,934 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,935 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,936 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,937 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,938 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,939 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,940 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,941 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,942 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 10:54:14,943 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 10:54:14,943 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 10:54:14,943 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to DejaVu Sans Display ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2023-04-17 10:54:15,090 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,090 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,092 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,092 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,092 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,092 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,150 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,150 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,151 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,151 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,152 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,152 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,162 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,163 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,164 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,164 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,164 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,165 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,242 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,243 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,244 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,244 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,245 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,245 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,255 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,256 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,257 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,257 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,258 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,258 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,290 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,291 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,292 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,292 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,292 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,292 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,302 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,302 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,304 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,304 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,305 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,305 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,393 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,393 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,394 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,394 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,395 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,395 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 10:54:15,459 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,459 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,461 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,461 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 10:54:15,461 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6168115862516568 vmax 25515.084915377967
2023-04-17 10:54:15,462 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 11:00:35,685 [55622] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-17 11:00:35,685 [55622] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-17 11:00:35,686 [55622] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-17 11:00:35,690 [55622] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-17 11:00:35,691 [55622] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-17 11:00:35,691 [55622] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-04-17 16:24:05,225 [55622] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-04-17 16:24:05,227 [55622] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 23; new: 1
2023-04-17 16:24:05,227 [55622] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:23] new[1:1]
2023-04-17 16:24:05,228 [55622] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-04-17 16:24:05,228 [55622] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-04-17 16:33:55,119 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,119 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,126 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,126 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,126 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,127 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,228 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,229 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,229 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,229 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,230 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,230 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,264 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,264 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,265 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,265 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,266 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,266 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,272 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,272 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,273 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,273 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,273 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,273 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,323 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,323 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,323 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,324 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,324 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,324 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,330 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,330 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,331 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,331 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,332 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,332 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,353 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,353 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,353 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,354 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,354 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,354 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,360 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,360 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,361 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,361 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,361 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,361 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,412 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,412 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,413 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,413 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,413 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,413 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:33:55,452 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,452 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,453 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,453 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:33:55,453 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:33:55,453 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,667 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,668 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,675 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,675 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,675 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,675 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,775 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,775 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,776 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,776 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,776 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,776 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,825 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,825 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,826 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,826 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,826 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,826 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,832 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,832 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,833 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,833 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,834 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,834 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,884 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,885 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,885 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,885 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,886 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,886 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,892 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,892 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,893 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,893 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,893 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,893 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,938 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,938 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,938 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,938 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,939 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,939 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:55,945 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,945 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,946 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,946 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:55,946 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:55,946 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:56,026 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:56,026 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:56,027 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:56,027 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:56,027 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:56,027 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:34:56,064 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:56,064 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:56,065 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:56,065 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:34:56,066 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:34:56,066 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:14,868 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:14,868 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:14,876 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:14,876 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:14,876 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:14,876 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:14,989 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:14,989 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:14,990 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:14,990 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:14,990 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:14,990 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,040 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,040 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,041 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,041 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,041 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,041 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,048 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,048 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,049 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,049 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,049 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,049 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,101 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,101 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,102 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,102 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,102 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,102 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,109 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,109 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,109 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,110 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,110 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,110 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,155 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,155 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,156 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,156 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,156 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,156 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,163 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,163 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,164 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,164 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,164 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,164 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,248 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,248 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,249 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,249 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,249 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,249 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:15,287 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,287 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,288 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,288 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:15,289 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:15,289 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,628 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,629 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,635 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,635 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,636 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,636 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,723 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,723 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,724 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,724 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,724 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,724 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,785 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,785 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,793 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,793 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,794 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,794 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,880 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,880 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,881 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,881 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,881 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,881 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,903 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,904 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,904 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,904 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,905 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,905 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,910 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,911 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,911 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,911 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,911 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,912 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,954 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,955 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,955 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,955 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,956 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,956 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,962 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,962 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,963 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,963 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:55,963 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:55,963 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:55,998 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,998 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:55,999 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:55,999 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,000 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,000 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,006 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,006 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,007 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,007 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,007 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,007 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,040 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,040 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,040 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,040 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,041 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,041 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,047 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,047 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,048 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,048 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,049 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,049 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,067 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,067 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,068 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,068 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,068 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,068 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,074 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,074 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,075 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,075 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,075 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,075 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,116 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,116 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,117 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,117 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,117 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,117 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,124 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,124 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,125 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,125 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,125 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,125 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,168 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,168 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,169 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,169 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,169 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,169 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,201 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,201 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,202 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,202 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:35:56,202 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:35:56,202 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,259 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,259 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,260 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,260 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,260 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,260 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:35:56,277 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,277 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,278 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,278 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:35:56,278 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:35:56,278 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,508 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,508 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,516 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,516 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,516 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,516 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,614 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,614 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,615 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,615 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,616 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,616 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,648 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,648 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,655 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,655 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,656 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,656 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,737 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,737 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,737 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,738 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,738 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,738 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,770 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,770 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,777 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,777 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,778 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,778 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,853 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,854 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,854 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,854 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,855 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,855 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,875 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,876 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,876 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,876 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,877 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,877 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,882 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,883 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,883 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,883 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,884 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,884 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,910 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,911 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,911 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,911 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,912 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,912 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,919 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,919 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,919 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,920 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,920 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:15,920 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,950 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,950 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,951 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,951 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,952 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,952 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,958 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,959 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,959 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,959 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:15,960 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:15,960 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:15,996 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,996 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,997 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,997 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:15,997 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:15,997 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,003 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,004 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,004 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,004 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,005 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,005 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,029 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,029 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,030 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,030 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,030 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,030 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,037 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,037 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,038 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,038 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,038 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,038 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,061 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,061 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,062 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,062 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,063 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,063 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,070 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,070 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,070 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,070 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,071 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,071 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,091 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,091 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,092 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,092 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,093 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,093 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,099 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,100 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,100 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,100 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,101 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,101 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,130 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,130 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,131 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,131 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,131 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,131 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,138 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,138 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,139 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,139 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,139 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,139 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,169 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,169 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,170 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,170 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,171 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,171 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,178 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,178 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,179 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,179 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,179 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,179 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,223 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,223 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,224 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,224 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,224 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,224 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,258 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,259 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,259 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,259 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2023-04-17 16:36:16,260 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2418544178662598 vmax 44378.792881932815
2023-04-17 16:36:16,260 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,292 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,292 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,292 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,293 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,293 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,293 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,310 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,310 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,311 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,311 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,311 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6018112403879984 vmax 42789.16422929874
2023-04-17 16:36:16,311 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,345 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,345 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,346 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,346 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,346 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,346 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 16:36:16,358 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,358 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,359 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,359 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06])
2023-04-17 16:36:16,359 [55622] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.5914720071672548 vmax 61571.80654147474
2023-04-17 16:36:16,359 [55622] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2023-04-17 17:14:14,114 [55622] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Serif:style=normal:variant=normal:weight=normal:stretch=normal:size=30.0.
2023-04-17 17:14:14,114 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,114 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,114 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,114 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,114 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 0.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 1.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 1.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,115 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,116 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,117 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,118 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,119 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,120 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,121 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,122 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 0.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,123 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,124 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,125 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,126 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,127 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,128 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,129 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,130 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-04-17 17:14:14,131 [55622] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Serif:style=normal:variant=normal:weight=normal:stretch=normal:size=30.0 to DejaVu Serif ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf') with score of 0.050000.
2023-04-17 17:47:45,728 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,760 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,778 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,804 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,812 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,821 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,842 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,849 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,855 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,861 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,872 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:47:45,881 [55622] DEBUG    matplotlib.axes._base:2820: [JupyterRequire] top of axes not in the figure, so title not moved
2023-04-17 17:48:12,237 [55622] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_55622/2715769357.py:12: UserWarning: Attempting to set identical bottom == top == 3.79670246558765 results in singular transformations; automatically expanding.
  axes[i].set_ylim(

2023-04-17 17:48:12,243 [55622] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_55622/2715769357.py:12: UserWarning: Attempting to set identical bottom == top == 2.48810783377633 results in singular transformations; automatically expanding.
  axes[i].set_ylim(

2023-04-17 17:48:12,254 [55622] WARNING  py.warnings:109: [JupyterRequire] /tmp/ipykernel_55622/2715769357.py:12: UserWarning: Attempting to set identical bottom == top == 9.887435351384239 results in singular transformations; automatically expanding.
  axes[i].set_ylim(

2023-04-17 21:18:20,444 [55622] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-04-17 21:18:20,445 [55622] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-04-17 21:18:20,446 [55622] INFO     root:247: [JupyterRequire] Initializing comms.
2023-04-17 21:18:20,450 [55622] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-04-17 21:18:20,450 [55622] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-04-17 21:18:20,451 [55622] DEBUG    root:97: [JupyterRequire] Registering comm targets.
