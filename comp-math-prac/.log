2023-03-28 11:01:05,636 [56513] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-28 11:01:05,637 [56513] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-28 11:01:05,637 [56513] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-28 11:01:05,645 [56513] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-28 11:01:05,645 [56513] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-28 11:01:05,646 [56513] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-28 11:01:06,323 [56513] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-28 11:01:06,324 [56513] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-28 11:01:06,324 [56513] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-28 11:01:06,329 [56513] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-28 11:01:06,330 [56513] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-28 11:01:06,330 [56513] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-28 11:09:04,718 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/__init__.py
2023-03-28 11:12:13,945 [56513] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-28 11:12:13,946 [56513] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 13; new: 1
2023-03-28 11:12:13,946 [56513] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:13] new[1:1]
2023-03-28 11:12:13,947 [56513] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-28 11:12:13,947 [56513] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-28 11:12:14,842 [56513] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-28 11:12:14,843 [56513] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-03-28 11:12:14,843 [56513] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-03-28 11:12:14,844 [56513] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-28 11:12:14,844 [56513] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-28 11:25:39,087 [56513] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-28 11:25:39,087 [56513] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 39
2023-03-28 11:25:39,087 [56513] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:39]
2023-03-28 11:25:39,098 [56513] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 40 (to 38 in part parser)
2023-03-28 11:25:39,099 [56513] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-28 11:25:39,200 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-03-28 11:25:39,261 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/typing.py
2023-03-28 11:25:39,279 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-03-28 11:25:39,324 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-03-28 11:34:59,139 [56513] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-28 11:34:59,139 [56513] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 39; new: 1
2023-03-28 11:34:59,139 [56513] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:39] new[1:1]
2023-03-28 11:34:59,140 [56513] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-28 11:34:59,140 [56513] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-28 11:34:59,146 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/linalg/__init__.py
2023-03-28 11:36:44,341 [56513] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-28 11:36:44,342 [56513] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 4
2023-03-28 11:36:44,342 [56513] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:4]
2023-03-28 11:36:44,343 [56513] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 4 (to 3 in part parser)
2023-03-28 11:36:44,343 [56513] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-28 11:36:44,351 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/random/__init__.py
2023-03-28 11:38:36,081 [56513] WARNING  py.warnings:109: [JupyterRequire] /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/linalg/linalg.py:2523: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  (ord in ('f', 'fro') and ndim == 2) or

2023-03-28 12:00:50,885 [56513] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-28 12:00:50,887 [56513] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 4; new: 1
2023-03-28 12:00:50,887 [56513] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:4] new[1:1]
2023-03-28 12:00:50,888 [56513] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-28 12:00:50,888 [56513] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-28 12:00:51,013 [56513] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/numpy/__init__.pyi
2023-03-28 12:00:55,771 [56513] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-28 12:00:55,771 [56513] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-03-28 12:00:55,772 [56513] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-03-28 12:00:55,772 [56513] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-28 12:00:55,773 [56513] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-28 13:19:50,147 [5231] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-28 13:19:50,148 [5231] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-28 13:19:50,148 [5231] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-28 13:19:50,152 [5231] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-28 13:19:50,153 [5231] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-28 13:19:50,153 [5231] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-28 13:39:46,666 [5231] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-03-28 13:39:46,697 [5231] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-03-28 13:39:46,806 [5231] DEBUG    parso.cache:152: [JupyterRequire] pickle loaded: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/scipy/__init__.py
2023-03-28 14:14:55,099 [5231] DEBUG    matplotlib:224: [JupyterRequire] matplotlib data path: /home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data
2023-03-28 14:14:55,111 [5231] DEBUG    matplotlib:224: [JupyterRequire] CONFIGDIR=/home/eduard/.config/matplotlib
2023-03-28 14:14:55,114 [5231] DEBUG    matplotlib:1394: [JupyterRequire] matplotlib version 3.4.3
2023-03-28 14:14:55,115 [5231] DEBUG    matplotlib:1395: [JupyterRequire] interactive is False
2023-03-28 14:14:55,115 [5231] DEBUG    matplotlib:1396: [JupyterRequire] platform is linux
2023-03-28 14:14:55,115 [5231] DEBUG    matplotlib:1397: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', '_io', 'marshal', 'posix', '_frozen_importlib_external', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', 'encodings.latin_1', '_abc', 'abc', 'io', '__main__', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', '_heapq', 'heapq', 'itertools', 'keyword', '_operator', 'operator', 'reprlib', '_collections', 'collections', 'collections.abc', '_functools', 'functools', 'contextlib', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', 'typing.io', 'typing.re', 'typing', 'importlib.abc', 'importlib.util', 'mpl_toolkits', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', 'pwd', 'grp', '_posixsubprocess', 'select', 'math', 'selectors', 'subprocess', 'jupyter_client._version', 'fnmatch', 'glob', '_socket', 'array', 'socket', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'shutil', '_bisect', 'bisect', '_random', '_sha512', 'random', 'tempfile', 'termios', 'getpass', 'platform', '_ctypes', '_struct', 'struct', 'ctypes._endian', 'ctypes', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_24', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'copy', '_compat_pickle', '_pickle', 'pickle', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'atexit', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'token', 'tokenize', 'linecache', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'traceback', '_string', 'string', 'logging', 'pprint', 'gettext', 'argparse', 'traitlets.config.loader', 'textwrap', 'traitlets.utils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'ntpath', 'urllib', 'urllib.parse', 'pathlib', 'jupyter_core.paths', 'jupyter_client.utils', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_ssl', 'binascii', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.threads', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', '_queue', 'queue', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', '_datetime', 'datetime', 'numbers', 'logging.handlers', 'html.entities', 'html', 'tornado.speedups', 'tornado.util', 'tornado.escape', 'colorama.ansi', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', '_curses', 'curses', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', '__future__', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'sysconfig', '_sysconfigdata__linux_x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'locale', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'tty', 'pty', 'fcntl', 'resource', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'IPython.lib.security', 'IPython.lib', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.deduplicate', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout.scrollable_pane', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'prompt_toolkit.patch_stdout', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'parso._compatibility', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.file_io', 'parso.grammar', 'parso', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.file_io', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.common', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'dataclasses', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'ipython_genutils._version', 'ipython_genutils', 'ipython_genutils.encoding', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', '_decimal', 'decimal', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.control', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.compiler', 'debugpy._version', 'debugpy.common', 'debugpy.common.json', 'debugpy.common.fmt', 'debugpy.common.compat', 'debugpy', 'debugpy._vendored._util', 'debugpy._vendored', '_pydevd_bundle', 'encodings.ascii', 'stringprep', 'encodings.idna', '_pydevd_bundle.pydevd_vm_type', '_pydev_imps', 'xmlrpc', 'xml.parsers', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'xml.parsers.expat', 'gzip', 'xmlrpc.client', 'socketserver', 'http.server', 'xmlrpc.server', '_pydev_imps._pydev_saved_modules', '_pydevd_bundle.pydevd_constants', '_pydev_bundle', '_pydev_runfiles', '_pydevd_frame_eval', 'pydev_ipython', 'pydevd_concurrency_analyser', 'zipfile', 'plistlib', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources._vendor.packaging', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging._typing', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.utils', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources.extern.packaging.markers', 'pkg_resources.extern.packaging.requirements', 'pkg_resources', 'pydevd_plugins', '_pydev_bundle.pydev_log', '_pydev_bundle._pydev_filesystem_encoding', '_pydevd_bundle.pydevd_comm_constants', 'pydevd_file_utils', '_pydev_imps._pydev_execfile', '_pydevd_bundle.pydevd_exec2', '_pydev_bundle.pydev_imports', '_pydev_bundle.pydev_is_thread_alive', '_pydev_bundle.pydev_override', 'pydevd_plugins.extensions', '_pydevd_bundle.pydevd_extension_utils', '_pydevd_bundle.pydevd_frame_utils', '_pydevd_bundle.pydevd_filtering', '_pydevd_bundle.pydevd_io', '_pydevd_bundle.pydevd_utils', '_pydev_bundle._pydev_tipper_common', '_pydev_bundle._pydev_imports_tipper', '_pydev_bundle._pydev_calltip_util', '_pydevd_bundle.pydevd_safe_repr', '_pydevd_bundle.pydevd_resolver', '_pydevd_bundle.pydevd_extension_api', '_pydevd_bundle.pydevd_xml', '_pydevd_bundle.pydevd_dont_trace', '_pydevd_frame_eval.vendored', '_pydevd_frame_eval.vendored.bytecode.flags', '_pydevd_frame_eval.vendored.bytecode.instr', '_pydevd_frame_eval.vendored.bytecode.bytecode', '_pydevd_frame_eval.vendored.bytecode.concrete', '_pydevd_frame_eval.vendored.bytecode.cfg', '_pydevd_frame_eval.vendored.bytecode', '_pydevd_bundle.pydevd_bytecode_utils', '_pydevd_bundle.pydevd_cython', '_pydevd_bundle.pydevd_cython_wrapper', '_pydevd_bundle.pydevd_additional_thread_info', '_pydevd_bundle.pydevd_thread_lifecycle', '_pydevd_bundle.pydevd_save_locals', '_pydevd_bundle.pydevd_defaults', '_pydev_bundle.pydev_monkey', 'pydevd_tracing', '_pydevd_bundle.pydevd_daemon_thread', '_pydevd_bundle.pydevd_timeout', '_pydevd_bundle.pydevd_vars', '_pydev_bundle.pydev_console_utils', '_pydevd_bundle.pydevd_import_class', '_pydevd_bundle.pydevd_breakpoints', '_pydevd_bundle.pydevd_custom_frames', '_pydevd_bundle.pydevd_dont_trace_files', '_pydevd_bundle.pydevd_net_command', '_pydev_bundle.pydev_umd', 'pydevconsole', '_pydev_bundle._pydev_completer', '_pydevd_bundle.pydevd_net_command_factory_xml', '_pydevd_bundle.pydevd_frame', '_pydevd_bundle.pydevd_additional_thread_info_regular', '_pydevd_bundle.pydevd_trace_dispatch', '_pydevd_frame_eval.pydevd_frame_eval_main', '_pydevd_bundle.pydevd_source_mapping', 'pydevd_concurrency_analyser.pydevd_thread_wrappers', 'pydevd_concurrency_analyser.pydevd_concurrency_logger', '_pydevd_bundle._debug_adapter', '_pydevd_bundle._debug_adapter.pydevd_schema_log', '_pydevd_bundle._debug_adapter.pydevd_base_schema', '_pydevd_bundle._debug_adapter.pydevd_schema', '_pydevd_bundle.pydevd_reload', '_pydev_bundle.fsnotify', '_pydevd_bundle.pydevd_console', '_pydevd_bundle.pydevd_comm', '_pydevd_bundle.pydevd_net_command_factory_json', '_pydevd_bundle.pydevd_collect_bytecode_info', '_pydevd_bundle.pydevd_api', '_pydevd_bundle.pydevd_json_debug_options', '_pydevd_bundle.pydevd_process_net_command_json', '_pydevd_bundle.pydevd_traceproperty', '_pydevd_bundle.pydevd_process_net_command', '_pydevd_bundle.pydevd_suspended_frames', '_pydevd_bundle.pydevd_trace_api', 'pydevd_plugins.django_debug', 'pydevd_plugins.jinja2_debug', '_pydevd_bundle.pydevd_plugin_utils', 'pydevd_plugins.extensions.types', 'pydevd_plugins.extensions.types.pydevd_helpers', 'pydevd_plugins.extensions.types.pydevd_plugin_numpy_types', 'pydevd_plugins.extensions.types.pydevd_plugins_django_form_str', 'pydevd', 'debugpy._vendored.force_pydevd', 'debugpy.server', 'debugpy.adapter', 'debugpy.common.timestamp', 'debugpy.common.util', 'debugpy.common.log', 'debugpy.common.sockets', 'debugpy.server.api', 'ipykernel.debugger', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'faulthandler', 'IPython.core.completerlib', 'storemagic', 'configparser', 'optparse', 'pycodestyle', 'autopep8', 'logging.config', 'syslog', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.types', 'daiquiri.formatter', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jedi.inference.finder', 'jedi.inference.star_args', 'numpy._globals', 'numpy.__config__', 'numpy._version', 'numpy._distributor_init', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'scipy._lib._testutils', 'scipy._lib', 'scipy._lib.deprecation', 'scipy.__config__', 'scipy.version', 'scipy._distributor_init', 'scipy._lib._pep440', 'scipy._lib._ccallback_c', 'scipy._lib._ccallback', 'scipy', 'scipy.optimize.minpack2', 'scipy.optimize.linesearch', 'scipy._lib._util', 'scipy.sparse.sputils', 'scipy.sparse.base', 'scipy.sparse._sparsetools', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.compressed', 'scipy.sparse.csr', 'scipy.sparse.csc', 'scipy.sparse._csparsetools', 'scipy.sparse.lil', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._shortest_path', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'scipy.sparse.csgraph', 'scipy.sparse', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib.decorator', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve.minres', 'scipy.linalg._fblas', 'scipy.linalg.blas', 'scipy.linalg._flapack', 'scipy.linalg.lapack', 'scipy.linalg.misc', 'scipy.linalg._flinalg', 'scipy.linalg.flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.basic', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm_triu', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg.matfuncs', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._decomp_update', 'scipy.linalg._sketches', 'scipy.linalg._decomp_cossin', 'scipy.linalg', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen', 'scipy.special.sf_error', 'scipy.special._ufuncs_cxx', 'scipy.special._ufuncs', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._basic', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm_2', 'scipy.special._ellip_harm', 'scipy.special._lambertw', 'scipy.special._spherical_bessel', 'scipy.special', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.sparse.linalg', 'scipy.optimize._group_columns', 'scipy.optimize._numdiff', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._differentiable_functions', 'scipy.optimize.optimize', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion_ncg', 'scipy._lib.messagestream', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trlib', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trustregion_exact', 'unittest.util', 'unittest.result', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.signals', 'unittest.runner', 'unittest.main', 'unittest', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'numpy.testing', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.optimize._trustregion_constr', 'scipy.optimize._lbfgsb', 'scipy.optimize.lbfgsb', 'scipy.optimize.moduleTNC', 'scipy.optimize.tnc', 'scipy.optimize._cobyla', 'scipy.optimize.cobyla', 'scipy.optimize._slsqp', 'scipy.optimize.slsqp', 'scipy.optimize._minimize', 'scipy.optimize._minpack', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.bvls', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq', 'scipy.optimize.minpack', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root', 'scipy.optimize._zeros', 'scipy.optimize.zeros', 'scipy.optimize._root_scalar', 'scipy.optimize.__nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._highs', 'scipy.optimize._highs.cython.src._highs_wrapper', 'scipy.optimize._highs._highs_wrapper', 'scipy.optimize._highs.cython.src._highs_constants', 'scipy.optimize._highs._highs_constants', 'scipy.optimize._linprog_highs', 'scipy.linalg._interpolative', 'scipy.linalg._interpolative_backend', 'scipy.linalg.interpolative', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_util', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_simplex', 'scipy.optimize._bglu_dense', 'scipy.optimize._linprog_rs', 'scipy.optimize._linprog_doc', 'scipy.optimize._linprog', 'scipy.optimize._lsap_module', 'scipy.optimize._lsap', 'scipy.optimize._differentialevolution', 'scipy.spatial.ckdtree', 'scipy.spatial.kdtree', 'scipy.spatial.qhull', 'scipy.spatial._voronoi', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._plotutils', 'scipy.spatial._procrustes', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.spatial._distance_pybind', 'scipy.spatial.distance', 'scipy.spatial._geometric_slerp', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.constants', 'scipy.spatial.transform._rotation_groups', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_spline', 'scipy.spatial.transform', 'scipy.spatial', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._shgo', 'scipy.optimize._dual_annealing', 'scipy.optimize._qap', 'scipy.optimize', 'matplotlib', 'matplotlib._api.deprecation', 'matplotlib._api', 'matplotlib._c_internal_utils', 'matplotlib.cbook', 'matplotlib.docstring', 'PIL._version', 'PIL', 'xml.etree', 'xml.etree.ElementPath', '_elementtree', 'xml.etree.ElementTree', 'PIL.ImageMode', 'PIL.TiffTags', 'PIL._binary', 'PIL._util', 'PIL._imaging', 'cffi.lock', 'cffi.error', 'cffi.model', 'cffi.api', 'cffi', 'PIL.Image', 'matplotlib._animation_data', 'matplotlib.animation', 'PIL.ImageChops', 'PIL.ImageFile', 'PIL.GimpGradientFile', 'PIL.GimpPaletteFile', 'PIL.ImageColor', 'PIL.PaletteFile', 'PIL.ImagePalette', 'PIL.ImageSequence', 'PIL.PngImagePlugin', 'matplotlib._path', 'matplotlib.bezier', 'matplotlib.path', 'matplotlib.transforms', 'matplotlib.ticker', 'matplotlib.scale', 'matplotlib._color_data', 'matplotlib.colors', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib._enums', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver', 'dateutil.rrule', 'matplotlib.units', 'matplotlib.dates']
2023-03-28 14:14:55,153 [5231] DEBUG    matplotlib:224: [JupyterRequire] CACHEDIR=/home/eduard/.cache/matplotlib
2023-03-28 14:14:55,156 [5231] DEBUG    matplotlib.font_manager:1439: [JupyterRequire] Using fontManager instance from /home/eduard/.cache/matplotlib/fontlist-v330.json
2023-03-28 14:14:55,273 [5231] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-03-28 14:14:55,274 [5231] DEBUG    matplotlib.pyplot:290: [JupyterRequire] Loaded backend module://matplotlib_inline.backend_inline version unknown.
2023-03-28 14:15:48,826 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:48,826 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,842 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,843 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,844 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,845 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,846 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,847 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,848 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,849 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,850 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,851 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:48,852 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,853 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,854 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,855 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:48,856 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,857 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,858 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,859 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,860 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,861 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,862 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-03-28 14:15:48,884 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:48,884 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:48,885 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:48,885 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:48,886 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:48,886 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:48,991 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.335
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,992 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,993 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,994 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:48,995 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,996 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:48,997 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,998 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:48,999 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,000 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,001 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,002 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,003 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,004 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,005 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,006 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,007 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,008 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,009 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf') with score of 0.050000.
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,010 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 1.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 1.335
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,011 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,012 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,013 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,014 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,015 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,016 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,017 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,018 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,019 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-03-28 14:15:49,020 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-03-28 14:15:49,021 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,022 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,023 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,024 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,025 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,026 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,027 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf') with score of 0.050000.
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2023-03-28 14:15:49,028 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 1.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 0.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,029 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-28 14:15:49,030 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,031 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-28 14:15:49,032 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,033 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-03-28 14:15:49,034 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,035 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,036 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,037 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,038 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,039 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,040 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-03-28 14:15:49,041 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,042 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,043 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,044 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXGeneral ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf') with score of 0.050000.
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,045 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,046 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.335
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2023-03-28 14:15:49,047 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,048 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,049 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,050 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,051 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,052 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,053 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,054 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,055 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,056 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,057 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,058 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,059 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,060 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,061 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,062 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf') with score of 0.050000.
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 1.335
2023-03-28 14:15:49,063 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,064 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 1.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,065 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,066 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,067 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,068 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,069 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,070 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,071 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,072 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-03-28 14:15:49,073 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,074 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,075 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,076 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,077 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-03-28 14:15:49,078 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,079 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,080 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf') with score of 0.050000.
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 0.05
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,081 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 1.05
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,082 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,083 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,084 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-03-28 14:15:49,085 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,086 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,087 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,088 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,089 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-03-28 14:15:49,090 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,091 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,092 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,093 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,094 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,095 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,096 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXNonUnicode ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf') with score of 0.050000.
2023-03-28 14:15:49,097 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,098 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,099 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,100 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,101 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,102 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,103 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,104 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,105 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,106 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,107 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,108 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,109 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,110 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,111 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,112 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,113 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,114 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeOneSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf') with score of 0.050000.
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,115 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,116 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,117 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,118 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,119 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,120 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,121 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,122 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,123 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,124 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,125 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,126 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,127 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,128 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,129 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,130 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,131 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeTwoSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf') with score of 0.050000.
2023-03-28 14:15:49,132 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,133 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,134 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,135 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,136 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,137 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,138 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,139 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,140 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,141 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,142 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,143 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,144 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,145 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,146 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,147 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,148 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,149 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeThreeSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf') with score of 0.050000.
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,150 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,151 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,152 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,153 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,154 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,155 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,156 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,157 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,158 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,159 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,160 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,161 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,162 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,163 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,164 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,165 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFourSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf') with score of 0.050000.
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,166 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,167 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,168 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,169 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,170 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,171 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,172 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,173 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,174 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,175 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,176 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,177 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,178 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,179 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,180 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,181 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,182 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFiveSym ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf') with score of 0.050000.
2023-03-28 14:15:49,183 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,184 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,185 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,186 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,187 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,188 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,189 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,190 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,191 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,192 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,193 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,194 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,195 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,196 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,197 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,198 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,199 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmsy10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf') with score of 0.050000.
2023-03-28 14:15:49,200 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,201 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,202 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,203 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,204 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,205 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,206 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,207 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,208 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,209 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,210 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,211 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,212 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,213 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,214 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,215 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,216 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmr10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf') with score of 0.050000.
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,217 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,218 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,219 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,220 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,221 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,222 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,223 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,224 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,225 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,226 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,227 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,228 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,229 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,230 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,231 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,232 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,233 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmtt10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf') with score of 0.050000.
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,234 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,235 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,236 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,237 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,238 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,239 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,240 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,241 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,242 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,243 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,244 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,245 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,246 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,247 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,248 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,249 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,250 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmmi10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf') with score of 0.050000.
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,251 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,252 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,253 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,254 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,255 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,256 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,257 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,258 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,259 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,260 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,261 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,262 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,263 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,264 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,265 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,266 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,267 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmb10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf') with score of 0.050000.
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,268 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,269 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,270 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,271 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,272 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,273 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,274 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,275 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,276 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,277 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,278 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,279 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,280 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,281 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,282 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,283 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,284 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmss10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf') with score of 0.050000.
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,285 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,286 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,287 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,288 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,289 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,290 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,291 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,292 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,293 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,294 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,295 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,296 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,297 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,298 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,299 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,300 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,301 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmex10 ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf') with score of 0.050000.
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,302 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,303 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,304 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,305 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,306 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,307 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,308 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,309 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,310 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,311 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,312 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,313 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,314 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,315 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,316 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,317 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,318 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,319 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,320 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 0.43499999999999994
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 10.35
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 10.535
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,321 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 10.24
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,322 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,323 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 11.335
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 10.34
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 10.145
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,324 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 11.535
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,325 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 1.335
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,326 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 11.1925
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,327 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,328 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 10.25
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 11.24
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,329 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 10.145
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,330 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 10.634999999999998
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 11.25
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,331 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 10.145
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 10.245
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,332 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,333 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 11.535
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 10.145
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 10.34
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 11.145
2023-03-28 14:15:49,334 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 11.145
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 10.434999999999999
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 10.15
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 11.335
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 11.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 10.05
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 10.335
2023-03-28 14:15:49,335 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf') with score of 0.150000.
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,336 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,337 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.05
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.535
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.25
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,338 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.145
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,339 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,340 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.62
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.145
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,341 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.43
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,342 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.25
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.05
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,343 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.4775
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,344 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,345 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.535
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.145
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,346 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.24
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.33499999999999996
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,347 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.25
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.535
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,348 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.24
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,349 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.43
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,350 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.25
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.43
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.145
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,351 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.43
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.24
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.05
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.05
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,352 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.335
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.335
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.05
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to DejaVu Sans ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf') with score of 0.050000.
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,353 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,354 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,355 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,356 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,357 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,358 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,359 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,360 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,361 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,362 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,363 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,364 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,365 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,366 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,367 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,368 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,369 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Mono ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf') with score of 0.050000.
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1329: [JupyterRequire] findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,370 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,371 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,372 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,373 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,374 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,375 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,376 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,377 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,378 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,379 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,380 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,381 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,382 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,383 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,384 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-28 14:15:49,385 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-28 14:15:49,386 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,387 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,387 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-28 14:15:49,387 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-28 14:15:49,387 [5231] DEBUG    matplotlib.font_manager:1341: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-28 14:15:49,387 [5231] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Display ('/home/eduard/anaconda3/envs/python/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf') with score of 0.050000.
2023-03-28 14:15:49,604 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,605 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,605 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,606 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,606 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,606 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,649 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,649 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,650 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,650 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,650 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,650 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,659 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,659 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,660 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,660 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,660 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,661 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,741 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,742 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,742 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,742 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,743 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,743 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,752 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,752 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,753 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,753 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,753 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,754 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,777 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,778 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,778 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,779 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,779 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,779 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,787 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,788 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,788 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,789 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,789 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,789 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,847 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,848 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,848 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,848 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,849 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,849 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:15:49,917 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,918 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,919 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,919 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:15:49,919 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:15:49,919 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,461 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,461 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,487 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,487 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,488 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,488 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,488 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,489 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,648 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,648 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,649 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,649 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,649 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,649 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,689 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,689 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,690 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,690 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,691 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,691 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,699 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,699 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,700 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,700 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,700 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,700 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,768 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,769 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,769 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,769 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,770 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,770 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,778 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,778 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,778 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,778 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,779 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,779 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,799 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,800 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,800 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,800 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,801 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,801 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,808 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,808 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,809 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,809 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,809 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,810 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,858 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,858 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,859 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,859 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,859 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,859 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:16:52,921 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,921 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,922 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,923 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-08, 1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01,
       1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:16:52,923 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 8.028965978627043e-07 vmax 1.9479221919499587
2023-03-28 14:16:52,923 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-08, 3.e-08, 4.e-08, 5.e-08, 6.e-08, 7.e-08, 8.e-08, 9.e-08,
       2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:09,988 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:09,988 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,012 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,012 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,013 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,013 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,014 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,014 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,318 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,319 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,319 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,319 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,320 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,320 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,356 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,356 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,357 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,357 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,357 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,357 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,364 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,364 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,365 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,365 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,365 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,365 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,433 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,433 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,434 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,434 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,434 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,434 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,441 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,441 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,442 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,442 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,442 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,442 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,461 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,461 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,462 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,462 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,462 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,463 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,469 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,469 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,470 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,470 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,470 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,471 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,518 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,518 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,519 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,519 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,519 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,519 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:10,580 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,580 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,581 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,581 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:10,582 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:10,582 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:33,864 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:33,864 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:33,886 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:33,886 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:33,887 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:33,887 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:33,887 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:33,887 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,027 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,027 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,028 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,028 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,028 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,028 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,066 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,067 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,067 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,067 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,068 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,068 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,076 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,076 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,076 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,077 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,077 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,077 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,152 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,152 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,153 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,153 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,153 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,154 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,160 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,160 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,161 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,161 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,161 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,161 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,180 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,181 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,181 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,181 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,182 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,182 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,189 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,189 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,189 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,190 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,190 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,190 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,244 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,244 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,245 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,245 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,245 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,245 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:17:34,308 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,308 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,309 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,309 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-07, 1.e-06, 1.e-05, 1.e-04, 1.e-03, 1.e-02, 1.e-01, 1.e+00,
       1.e+01, 1.e+02])
2023-03-28 14:17:34,310 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.304186083517516e-06 vmax 1.9034401555859826
2023-03-28 14:17:34,310 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-07, 3.e-07, 4.e-07, 5.e-07, 6.e-07, 7.e-07, 8.e-07, 9.e-07,
       2.e-06, 3.e-06, 4.e-06, 5.e-06, 6.e-06, 7.e-06, 8.e-06, 9.e-06,
       2.e-05, 3.e-05, 4.e-05, 5.e-05, 6.e-05, 7.e-05, 8.e-05, 9.e-05,
       2.e-04, 3.e-04, 4.e-04, 5.e-04, 6.e-04, 7.e-04, 8.e-04, 9.e-04,
       2.e-03, 3.e-03, 4.e-03, 5.e-03, 6.e-03, 7.e-03, 8.e-03, 9.e-03,
       2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,402 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,402 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,420 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,420 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,421 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,421 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,421 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,421 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,478 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,479 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,479 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,479 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,480 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,480 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,491 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,491 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,492 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,492 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,493 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,493 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,498 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,498 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,498 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,498 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,499 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,499 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,516 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,517 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,518 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,518 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,519 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,519 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,523 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,523 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,524 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,524 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,524 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,525 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,537 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,537 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,538 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,538 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,538 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,538 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,543 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,543 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,543 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,543 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,544 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,544 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,570 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,571 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,571 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,571 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,572 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,572 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:19:50,586 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,586 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,587 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,587 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:19:50,587 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:19:50,587 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,623 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,623 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,642 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,642 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,642 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,643 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,643 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,643 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,701 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,701 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,702 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,702 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,702 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,702 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,714 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,715 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,715 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,715 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,716 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,716 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,720 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,721 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,721 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,721 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,722 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,722 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,737 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,737 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,738 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,738 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,738 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,738 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,742 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,743 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,743 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,743 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,743 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,744 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,756 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,756 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,757 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,757 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,757 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,757 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,762 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,762 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,762 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,763 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,763 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,763 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,790 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,790 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,791 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,791 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,791 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,791 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:30,806 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,806 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,807 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,807 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:30,808 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:30,808 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,282 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,282 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,299 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,299 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,300 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,300 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,300 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,300 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,355 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,355 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,356 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,356 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,356 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,357 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,368 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,368 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,369 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,369 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,369 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,369 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,374 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,374 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,375 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,375 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,375 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,375 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,389 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,389 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,390 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,390 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,390 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,390 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,394 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,394 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,395 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,395 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,395 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,395 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,406 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,407 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,407 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,407 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,408 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,408 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,412 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,412 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,412 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,413 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,413 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,413 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,437 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,438 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,438 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,438 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,439 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,439 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:20:44,452 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,453 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,453 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,453 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:20:44,454 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:20:44,454 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,493 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,493 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,511 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,511 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,512 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,512 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,512 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,512 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,564 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,565 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,565 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,565 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,566 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,566 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,577 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,577 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,578 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,578 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,578 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,578 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,582 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,582 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,583 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,583 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,583 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,584 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,597 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,597 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,598 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,598 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,598 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,598 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,603 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,603 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,603 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,603 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,604 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,604 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,615 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,615 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,616 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,616 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,616 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,616 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,620 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,620 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,621 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,621 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,621 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,621 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,646 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,646 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,647 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,647 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,647 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,647 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:14,661 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,661 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,662 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,662 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:14,662 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:14,662 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,248 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,248 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,268 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,268 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,269 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,269 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,269 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,269 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,515 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,515 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,516 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,516 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,517 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,517 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,527 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,527 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,528 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,528 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,528 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,528 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,533 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,533 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,533 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,533 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,534 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,534 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,546 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,546 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,547 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,547 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,547 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,547 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,551 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,551 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,552 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,552 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,552 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,552 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,562 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,562 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,563 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,563 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,563 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,563 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,567 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,567 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,568 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,568 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,568 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,568 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,590 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,590 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,591 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,591 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,591 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,591 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:27,603 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,603 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,604 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,604 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:27,604 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:27,604 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:32,979 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:32,979 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:32,997 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:32,997 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:32,997 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:32,998 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:32,998 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:32,998 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,050 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,051 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,051 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,051 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,052 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,052 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,063 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,063 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,064 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,064 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,064 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,064 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,068 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,069 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,069 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,069 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,070 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,070 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,084 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,084 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,084 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,084 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,085 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,085 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,089 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,090 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,090 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,090 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,091 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,091 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,102 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,102 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,103 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,103 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,103 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,103 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,107 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,108 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,108 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,108 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,109 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,109 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,133 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,133 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,134 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,134 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,134 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,135 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:33,148 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,148 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,149 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,149 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:33,150 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:33,150 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,205 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,205 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,224 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,224 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,225 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,225 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,225 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,226 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,277 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,277 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,278 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,278 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,278 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,278 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,290 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,290 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,291 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,291 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,291 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,291 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,296 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,296 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,297 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,297 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,297 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,298 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,311 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,312 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,312 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,312 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,313 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,313 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,317 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,317 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,317 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,318 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,318 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,318 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,329 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,329 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,330 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,330 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,330 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,330 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,334 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,334 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,335 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,335 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,335 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,335 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,360 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,361 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,361 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,361 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,362 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,362 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:21:45,375 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,375 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,376 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,376 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:21:45,377 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:21:45,377 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,176 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,176 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,193 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,193 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,194 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,194 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,195 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,195 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,250 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,251 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,251 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,252 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,252 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,252 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,262 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,262 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,263 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,263 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,263 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,264 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,267 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,267 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,268 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,268 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,269 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,269 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,281 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,281 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,282 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,282 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,283 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,283 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,286 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,287 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,287 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,287 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,288 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,288 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,298 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,299 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,299 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,299 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,300 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,300 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,304 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,304 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,305 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,305 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,305 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,305 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,327 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,328 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,328 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,329 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,329 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,329 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:22:12,357 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,357 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,358 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,358 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:22:12,359 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:22:12,359 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,221 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,221 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,238 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,238 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,239 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,239 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,239 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,240 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,292 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,292 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,292 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,292 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,293 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,293 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,304 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,304 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,305 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,305 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,305 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,305 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,310 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,310 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,310 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,310 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,311 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,311 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,324 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,325 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,325 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,325 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,326 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,326 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,330 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,330 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,331 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,331 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,331 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,331 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,342 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,342 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,343 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,343 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,343 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,343 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,347 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,347 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,348 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,348 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,348 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,349 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,373 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,373 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,374 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,374 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,374 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,374 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:23:44,387 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,388 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,388 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,388 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:23:44,389 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.6385628252075047 vmax 8.91868504463785
2023-03-28 14:23:44,389 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:00,488 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,488 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,505 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,505 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,506 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,507 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,507 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,507 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,586 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,586 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,587 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,587 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,588 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,588 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,599 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,599 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,600 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,600 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,600 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,601 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,605 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,605 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,606 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,606 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,607 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,607 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,621 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,621 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,622 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,622 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,622 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,622 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,627 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,627 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,628 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,628 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,628 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,628 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,640 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,640 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,641 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,641 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,641 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,641 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,646 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,646 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,647 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,647 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,647 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,647 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,676 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,676 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,677 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,677 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,677 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,677 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:00,718 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,718 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,719 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,719 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:00,719 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.7234851419994257 vmax 13.989601943090031
2023-03-28 14:24:00,719 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,748 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,748 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,765 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,765 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,766 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,766 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,767 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,767 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,843 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,843 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,844 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,844 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,844 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,844 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,858 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,858 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,859 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,859 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,859 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,859 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,865 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,865 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,866 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,866 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,867 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,867 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,883 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,883 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,885 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,885 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,885 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,885 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,891 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,891 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,892 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,892 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,893 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,893 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,906 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,906 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,907 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,907 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,908 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,908 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,914 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,914 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,915 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,915 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,916 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,916 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,944 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,944 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,945 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,945 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,946 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,946 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:27,980 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,980 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,981 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,981 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2023-03-28 14:24:27,982 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 3.2890716076917066 vmax 28.068547368469584
2023-03-28 14:24:27,982 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2023-03-28 14:24:55,208 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,209 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,222 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,223 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,223 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,223 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,224 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,224 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,276 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,277 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,277 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,277 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,278 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,278 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,288 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,289 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,289 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,289 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,290 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,290 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,294 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,294 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,295 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,295 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,295 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,295 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,309 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,309 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,310 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,310 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,310 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,310 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,314 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,314 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,315 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,315 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,315 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,316 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,326 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,327 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,327 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,327 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,328 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,328 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,332 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,333 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,333 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,333 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,334 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,334 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,358 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,358 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,359 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,359 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,360 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,360 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:24:55,376 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,376 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,377 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,377 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:24:55,377 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.43004538365777817 vmax 9.088171427637228
2023-03-28 14:24:55,377 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,325 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,325 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,339 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,339 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,340 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,340 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,340 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,340 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,393 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,394 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,394 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,394 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,395 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,395 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,405 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,405 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,406 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,406 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,406 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,407 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,411 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,411 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,411 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,412 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,412 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,412 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,427 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,427 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,427 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,427 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,428 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,428 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,432 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,432 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,433 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,433 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,433 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,433 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,445 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,445 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,446 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,446 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,446 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,446 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,450 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,450 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,451 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,451 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,451 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,451 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,473 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,473 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,473 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,473 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,474 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,474 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:03,489 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,489 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,490 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,490 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02])
2023-03-28 14:25:03,490 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.34240818021209957 vmax 9.187331248534594
2023-03-28 14:25:03,490 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,130 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,130 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,146 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,146 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,147 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,147 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,147 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,147 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,413 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,413 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,414 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,414 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,415 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,415 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,425 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,425 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,426 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,426 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,427 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,427 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,431 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,431 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,432 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,432 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,432 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,432 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,445 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,445 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,446 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,446 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,447 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,447 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,451 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,451 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,452 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,452 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,452 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,452 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,462 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,462 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,463 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,463 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,464 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,464 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,468 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,468 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,468 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,469 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,469 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,469 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,491 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,491 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,492 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,492 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,493 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,493 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:25:28,528 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,528 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,529 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,529 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:25:28,530 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.6004622335271967 vmax 8.536873323192731
2023-03-28 14:25:28,530 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,170 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,170 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,186 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,186 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,187 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,187 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,188 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,188 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,246 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,247 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,247 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,248 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,248 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,248 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,259 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,259 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,260 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,260 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,260 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,261 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,265 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,265 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,266 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,266 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,266 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,267 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,283 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,283 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,284 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,284 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,285 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,285 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,290 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,291 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,292 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,292 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,293 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,293 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,305 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,305 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,306 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,307 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,307 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,307 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,312 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,313 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,314 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,314 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,315 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,315 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,341 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,341 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,342 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,342 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,342 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,343 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:27:38,367 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,367 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,368 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,368 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:27:38,369 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.623009919516399 vmax 8.338385239862642
2023-03-28 14:27:38,369 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:28:50,611 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,611 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,636 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,636 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,637 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,637 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,638 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,638 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,787 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,787 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,788 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,788 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,789 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,789 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,808 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,809 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,809 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,809 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,810 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,810 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,817 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,818 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,818 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,818 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,819 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,819 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,840 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,841 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,841 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,841 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,842 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,842 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,849 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,849 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,849 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,850 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,850 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,850 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,869 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,869 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,870 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,870 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,870 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,870 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,877 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,877 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,878 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,878 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,878 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,878 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,909 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,909 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,910 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,910 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,910 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,910 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:28:50,962 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,963 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,963 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,963 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05,
       1.e+06, 1.e+07])
2023-03-28 14:28:50,964 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.4427761174298476 vmax 259709.1915451516
2023-03-28 14:28:50,964 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06,
       2.e+07, 3.e+07, 4.e+07, 5.e+07, 6.e+07, 7.e+07, 8.e+07, 9.e+07])
2023-03-28 14:29:19,624 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,624 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,644 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,644 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,645 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,645 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,646 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,646 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,718 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,718 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,719 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,719 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,719 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,719 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,732 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,732 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,732 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,733 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,733 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,733 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,738 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,738 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,739 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,739 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,739 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,739 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,754 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,755 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,755 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,755 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,756 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,756 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,761 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,761 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,762 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,762 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,762 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,762 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,775 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,776 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,776 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,776 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,777 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,777 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,781 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,781 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,782 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,782 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,782 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,782 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,810 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,810 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,811 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,811 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,811 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,811 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:19,835 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,835 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,835 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,835 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:19,836 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.2553366593858633 vmax 950.4916348405521
2023-03-28 14:29:19,836 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:34,969 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:34,969 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:34,985 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:34,986 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:34,986 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:34,986 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:34,987 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:34,987 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,072 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,072 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,072 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,073 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,073 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,073 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,086 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,086 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,087 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,087 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,087 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,087 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,093 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,093 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,094 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,094 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,094 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,095 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,113 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,113 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,114 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,114 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,114 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,114 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,121 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,121 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,121 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,122 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,122 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,122 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,138 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,138 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,139 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,139 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,139 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,139 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,145 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,145 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,146 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,146 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,147 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,147 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,171 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,171 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,172 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,172 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,172 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,172 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:35,209 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,209 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,210 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,210 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:35,210 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:35,211 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,812 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,812 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,829 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,829 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,830 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,830 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,830 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,830 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,906 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,906 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,906 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,907 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,907 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,907 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,920 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,920 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,921 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,921 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,922 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,922 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,927 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,927 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,928 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,928 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,928 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,928 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,945 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,946 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,946 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,946 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,947 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,947 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,952 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,952 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,953 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,953 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,953 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,953 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,969 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,969 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,971 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,971 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,972 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,972 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:53,982 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,982 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,983 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,983 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:53,983 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:53,983 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:54,011 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:54,012 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:54,012 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:54,012 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:54,013 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:54,013 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:54,039 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:54,039 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:54,039 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:54,040 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:54,040 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.0130313002529796 vmax 604.799342133616
2023-03-28 14:29:54,040 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,119 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,119 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,138 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,138 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,139 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,139 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,139 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,139 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,237 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,238 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,238 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,238 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,239 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,239 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,254 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,254 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,255 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,255 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,255 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,255 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,262 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,262 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,263 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,263 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,263 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,263 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,283 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,283 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,284 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,284 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,284 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,284 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,290 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,290 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,291 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,291 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,291 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,292 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,306 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,306 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,307 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,307 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,307 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,307 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,313 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,313 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,314 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,314 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,314 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,314 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,338 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,338 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,339 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,339 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,339 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,339 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:29:58,369 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,369 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,370 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,370 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([1.e-02, 1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2023-03-28 14:29:58,370 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 0.9911893015430385 vmax 961.2452019533972
2023-03-28 14:29:58,370 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-02, 3.e-02, 4.e-02, 5.e-02, 6.e-02, 7.e-02, 8.e-02, 9.e-02,
       2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2023-03-28 14:30:50,597 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,597 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,611 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,612 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,613 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,613 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,613 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,613 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,677 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,678 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,678 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,679 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,679 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,679 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,688 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,689 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,689 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,690 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,690 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,690 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,694 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,694 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,695 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,695 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,695 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,695 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,707 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,707 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,708 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,708 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,708 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,709 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,712 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,712 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,713 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,713 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,714 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,714 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,723 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,723 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,724 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,724 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,724 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,724 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,728 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,728 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,729 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,729 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,729 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,729 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,749 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,749 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,750 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,750 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,750 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,750 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:30:50,784 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,784 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,785 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,785 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:30:50,786 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 1.9889120726555416 vmax 8.44899436060701
2023-03-28 14:30:50,786 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:00,875 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,875 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,890 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,890 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,891 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,891 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,892 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,892 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:00,958 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,958 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,959 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,959 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,959 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,959 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:00,970 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,971 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,971 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,972 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,972 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,972 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:00,977 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,977 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,978 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,978 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,978 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,978 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:00,992 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,992 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,993 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,993 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,994 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,994 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:00,998 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,998 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:00,999 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:00,999 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,000 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,000 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:01,010 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,010 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,011 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,011 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,012 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,012 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:01,016 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,016 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,017 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,017 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,018 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,018 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:01,040 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,040 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,041 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,041 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,042 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,042 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:01,072 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,072 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,073 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,073 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:01,074 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:01,074 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,021 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,021 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,050 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,050 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,051 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,051 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,051 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,051 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,108 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,108 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,109 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,109 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,110 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,110 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,119 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,120 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,120 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,121 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,121 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,121 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,125 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,125 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,126 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,126 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,127 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,127 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,139 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,139 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,140 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,140 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,140 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,140 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,144 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,145 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,145 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,145 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,146 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,146 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,155 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,155 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,156 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,156 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,156 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,156 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,161 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,161 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,162 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,162 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,162 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,162 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,186 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,186 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,187 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,187 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,188 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,188 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:36,217 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,217 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,218 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,218 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:36,218 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:36,219 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,700 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,700 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,714 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,715 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,715 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,715 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,716 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,716 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,771 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,771 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,772 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,772 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,773 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,773 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,782 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,783 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,784 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,784 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,784 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,784 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,788 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,788 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,789 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,789 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,789 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,790 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,802 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,802 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,803 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,803 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,803 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,803 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,807 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,807 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,808 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,808 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,809 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,809 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,818 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,818 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,819 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,819 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,819 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,819 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,823 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,823 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,824 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,824 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,825 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,825 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,845 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,845 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,846 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,846 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,846 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,846 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
2023-03-28 14:36:54,874 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,874 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,875 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,875 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([  0.1,   1. ,  10. , 100. ])
2023-03-28 14:36:54,875 [5231] DEBUG    matplotlib.ticker:2471: [JupyterRequire] vmin 2.5135474548954573 vmax 8.242126790261699
2023-03-28 14:36:54,875 [5231] DEBUG    matplotlib.ticker:2529: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02])
